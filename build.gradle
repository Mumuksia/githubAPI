plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.23.0'
	id 'com.palantir.docker-run' version '0.23.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

task stage {
	dependsOn build
}

docker {
	name = "githubAPI".plus(version)
	uri("githubAPI".plus(version))
	tag("name", "githubAPI")
	buildArgs([BUILD_VERSION: '0.0.1-SNAPSHOT'])
	copySpec.from("build").into("build")
	pull(true)
	setDockerfile(file('src/main/java/com/example/githubapi/docker/DockerFile'))
}

dockerRun {
	name = "githubAPI".plus (version)
	image = "githubAPI".plus(version)
	ports("8080:8080")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.json:json:20190722'
	implementation 'com.sun.jersey:jersey-client:1.19.4'

	testImplementation 'junit:junit:4.4'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
